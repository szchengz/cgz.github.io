<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="WARN" monitorInterval="60">

    <!-- 常量引用 -->
    <properties>
        <property name="service_name">test_log4j2</property>
        <property name="LOG_HOME">${env:LOG_HOME}</property>
        <property name="FORMAT">%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n
        </property>
    </properties>

    <Appenders>
        <!-- 常见的输出到console,常用于开发环境中,默认是system_err,还有一个system_out -->
        <Console name="console" target="system_out">
            <!-- 添加过滤器ThresholdFilter,可以有选择的输出某个级别以上的类别  onMatch="ACCEPT" onMismatch="DENY"意思是匹配就接受,否则直接拒绝  -->
            <thresholdFilter level="info" onMatch="accept" onMismatch="deny"/>
            <patternLayout pattern="${FORMAT}"/>
        </Console>

        <File name="testFile" fileName="${LOG_HOME}/test/${service_name}.log" append="false">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </File>

        <RollingFile name="rollingFile" fileName="${LOG_HOME}/${service_name}.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz">
            <PatternLayout pattern="${FORMAT}"/>
            <Policies>
                <!-- interval，integer型，指定两次封存动作之间的时间间隔。单位:以日志的命名精度来确定单位，比如yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟。 -->
                <!-- modulate，boolean型，说明是否对封存时间进行调制。若modulate=true，则封存时间将以0点为边界进行偏移计算。 -->
                <!--设置每天打包日志一次-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <!--设置日志文件满10MB后打包-->
                <SizeBasedTriggeringPolicy size="10 MB"/>
            </Policies>
            <DefaultRolloverStrategy max="60"/>
        </RollingFile>

        <RollingFile name="RollingFileError" fileName="${sys:user.home}/logs/error.log"
                     filePattern="${sys:user.home}/logs/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
            <ThresholdFilter level="ERROR"/>
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
        </RollingFile>

    </Appenders>

    <Loggers>
        <Root level="info"> <!-- 定义Root Logger，其日志级别为error -->
            <AppenderRef ref="console"/> <!-- Root Logger的Appender引用上面定义的Console -->
            <AppenderRef ref="testFile"/> <!-- Root Logger的Appender引用上面定义的Console -->
            <AppenderRef ref="RollingFileError"/>
        </Root>

        <Logger name="HelloWorld" level="info" additivity="false"> <!-- 定义名字为HelloWorld的Logger，其日志级别为info，additivity为false -->
            <AppenderRef ref="console"/> <!-- Root Logger的Appender引用上面定义的Console -->
        </Logger>

        <logger name="java.sql.Connection" level="INFO" additivity="true">
            <appender-ref ref="console"/>
        </logger>
        <logger name="java.sql.Statement" level="INFO" additivity="true">
            <appender-ref ref="console"/>
        </logger>
        <logger name="java.sql.PreparedStatement" level="INFO" additivity="true">
            <appender-ref ref="console"/>
        </logger>
        <logger name="java.sql.ResultSet" level="INFO" additivity="true">
            <appender-ref ref="console"/>
        </logger>
        <!-- root logger,一般用于放置所有的appender -->
        <!-- 日志输出级别(>=INFO级别的日志都输出) -->
        <asyncRoot level="INFO">
            <appender-ref ref="console"/>
            <appender-ref ref="rollingFile"/>
            <!-- <appender-ref ref="testFile"/> -->
        </asyncRoot>
    </Loggers>
</Configuration>